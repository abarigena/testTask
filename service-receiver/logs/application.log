{"@timestamp":"2025-02-22T13:57:23.059+05:00","@version":"1","message":"Starting ServiceReceiverApplication using Java 21.0.1 with PID 1216 (E:\\Работа\\Тестовое задание\\testTask\\service-receiver\\target\\classes started by danil in E:\\Работа\\Тестовое задание\\testTask\\service-receiver)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:23.07+05:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:24.381+05:00","@version":"1","message":"Attempting to connect to: [rabbitmq:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:34.125+05:00","@version":"1","message":"Broker not available; cannot force queue declarations during start: java.net.UnknownHostException: Этот хост неизвестен (rabbitmq)","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:34.133+05:00","@version":"1","message":"Attempting to connect to: [rabbitmq:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:34.138+05:00","@version":"1","message":"Started ServiceReceiverApplication in 11.835 seconds (process running for 12.554)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:39.2+05:00","@version":"1","message":"Restarting Consumer@4c19d42e: tags=[[]], channel=null, acknowledgeMode=MANUAL local queue size=0","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:39.202+05:00","@version":"1","message":"Attempting to connect to: [rabbitmq:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:44.267+05:00","@version":"1","message":"Restarting Consumer@32aa8edc: tags=[[]], channel=null, acknowledgeMode=MANUAL local queue size=0","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:44.268+05:00","@version":"1","message":"Attempting to connect to: [rabbitmq:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:50.734+05:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:57:50.734+05:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:58:15.678+05:00","@version":"1","message":"Starting ServiceReceiverApplication using Java 21.0.1 with PID 21136 (E:\\Работа\\Тестовое задание\\testTask\\service-receiver\\target\\classes started by danil in E:\\Работа\\Тестовое задание\\testTask\\service-receiver)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:58:15.689+05:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:58:16.933+05:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:58:16.983+05:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#f425231:0/SimpleConnection@67bb4dcd [delegate=amqp://guest@127.0.0.1:5672/, localPort=54118]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:58:17.033+05:00","@version":"1","message":"Started ServiceReceiverApplication in 2.148 seconds (process running for 2.829)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:59:04.996+05:00","@version":"1","message":"Получено сообщение: id = 5, name = Product Name, Price = 99.99, Timestamp = 2025-02-22 13:59:04.868","logger_name":"com.test.service_receiver.service.RabbitReceiver","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:59:04.999+05:00","@version":"1","message":"Сохранение продукта: id = 5, name = Product Name, price = 99.99, timestamp = 2025-02-22 13:59:04.868","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:59:05.006+05:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T13:59:15.786+05:00","@version":"1","message":"Ошибка при сохранении продукта: id = 5, name = Product Name, price = 99.99, timestamp = 2025-02-22 13:59:04.868. Ошибка: Failed to obtain JDBC Connection","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:84)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:653)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:723)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:754)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:767)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:889)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:912)\r\n\tat com.test.service_receiver.repository.ProductRepository.existsById(ProductRepository.java:47)\r\n\tat com.test.service_receiver.repository.ProductRepository.saveProduct(ProductRepository.java:27)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.test.service_receiver.repository.ProductRepository$$SpringCGLIB$$0.saveProduct(<generated>)\r\n\tat com.test.service_receiver.service.ProductService.addNewProduct(ProductService.java:26)\r\n\tat com.test.service_receiver.service.RabbitReceiver.receive(RabbitReceiver.java:32)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:270)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:217)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:148)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1694)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1616)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1604)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1595)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1540)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1518)\r\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1518)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\nCaused by: org.postgresql.util.PSQLException: Ошибка при попытке подсоединения.\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:446)\r\n\tat org.postgresql.Driver.connect(Driver.java:298)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\r\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\r\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\r\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)\r\n\t... 41 common frames omitted\r\nCaused by: java.net.UnknownHostException: postgres\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:751)\r\n\tat org.postgresql.core.PGStream.createSocket(PGStream.java:260)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:121)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)\r\n\t... 55 common frames omitted\r\n","appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:00:29.66+05:00","@version":"1","message":"Получено сообщение: id = 7, name = Product Name, Price = 99.99, Timestamp = 2025-02-22 14:00:29.653","logger_name":"com.test.service_receiver.service.RabbitReceiver","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:00:29.66+05:00","@version":"1","message":"Сохранение продукта: id = 7, name = Product Name, price = 99.99, timestamp = 2025-02-22 14:00:29.653","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:00:29.661+05:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:00:40.386+05:00","@version":"1","message":"Ошибка при сохранении продукта: id = 7, name = Product Name, price = 99.99, timestamp = 2025-02-22 14:00:29.653. Ошибка: Failed to obtain JDBC Connection","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:84)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:653)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:723)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:754)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:767)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:889)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:912)\r\n\tat com.test.service_receiver.repository.ProductRepository.existsById(ProductRepository.java:47)\r\n\tat com.test.service_receiver.repository.ProductRepository.saveProduct(ProductRepository.java:27)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.test.service_receiver.repository.ProductRepository$$SpringCGLIB$$0.saveProduct(<generated>)\r\n\tat com.test.service_receiver.service.ProductService.addNewProduct(ProductService.java:26)\r\n\tat com.test.service_receiver.service.RabbitReceiver.receive(RabbitReceiver.java:32)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:270)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:217)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:148)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1694)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1616)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1604)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1595)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1540)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1518)\r\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1518)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\nCaused by: org.postgresql.util.PSQLException: Ошибка при попытке подсоединения.\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:446)\r\n\tat org.postgresql.Driver.connect(Driver.java:298)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\r\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\r\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\r\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)\r\n\t... 41 common frames omitted\r\nCaused by: java.net.UnknownHostException: postgres\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:751)\r\n\tat org.postgresql.core.PGStream.createSocket(PGStream.java:260)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:121)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)\r\n\t... 55 common frames omitted\r\n","appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:01:25.113+05:00","@version":"1","message":"Получено сообщение: id = 6, name = Product Name, Price = 99.99, Timestamp = 2025-02-22 14:01:25.108","logger_name":"com.test.service_receiver.service.RabbitReceiver","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:01:25.113+05:00","@version":"1","message":"Сохранение продукта: id = 6, name = Product Name, price = 99.99, timestamp = 2025-02-22 14:01:25.108","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:01:25.114+05:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:01:35.86+05:00","@version":"1","message":"Ошибка при сохранении продукта: id = 6, name = Product Name, price = 99.99, timestamp = 2025-02-22 14:01:25.108. Ошибка: Failed to obtain JDBC Connection","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:84)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:653)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:723)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:754)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:767)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:889)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:912)\r\n\tat com.test.service_receiver.repository.ProductRepository.existsById(ProductRepository.java:47)\r\n\tat com.test.service_receiver.repository.ProductRepository.saveProduct(ProductRepository.java:27)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.test.service_receiver.repository.ProductRepository$$SpringCGLIB$$0.saveProduct(<generated>)\r\n\tat com.test.service_receiver.service.ProductService.addNewProduct(ProductService.java:26)\r\n\tat com.test.service_receiver.service.RabbitReceiver.receive(RabbitReceiver.java:32)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:270)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:217)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:148)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1694)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1616)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1604)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1595)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1540)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1518)\r\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1518)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\nCaused by: org.postgresql.util.PSQLException: Ошибка при попытке подсоединения.\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:446)\r\n\tat org.postgresql.Driver.connect(Driver.java:298)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\r\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\r\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\r\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)\r\n\t... 41 common frames omitted\r\nCaused by: java.net.UnknownHostException: postgres\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:751)\r\n\tat org.postgresql.core.PGStream.createSocket(PGStream.java:260)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:121)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)\r\n\t... 55 common frames omitted\r\n","appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:02:19.505+05:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T14:02:20.357+05:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:50.807+05:00","@version":"1","message":"Starting ServiceReceiverApplication using Java 21.0.1 with PID 18392 (E:\\Работа\\Тестовое задание\\testTask\\service-receiver\\target\\classes started by danil in E:\\Работа\\Тестовое задание\\testTask\\service-receiver)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:50.818+05:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:52.034+05:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:52.098+05:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#f425231:0/SimpleConnection@738d37fc [delegate=amqp://guest@127.0.0.1:5672/, localPort=56513]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:52.146+05:00","@version":"1","message":"Started ServiceReceiverApplication in 2.145 seconds (process running for 2.841)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:52.201+05:00","@version":"1","message":"Получено сообщение: id = 6, name = Product Name, Price = 99.99, Timestamp = 2025-02-22 15:10:35.089","logger_name":"com.test.service_receiver.service.RabbitReceiver","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:52.204+05:00","@version":"1","message":"Сохранение продукта: id = 6, name = Product Name, price = 99.99, timestamp = 2025-02-22 15:10:35.089","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:10:52.209+05:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:11:03.01+05:00","@version":"1","message":"Ошибка при сохранении продукта: id = 6, name = Product Name, price = 99.99, timestamp = 2025-02-22 15:10:35.089. Ошибка: Failed to obtain JDBC Connection","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:84)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:653)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:723)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:754)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:767)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:889)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:912)\r\n\tat com.test.service_receiver.repository.ProductRepository.existsById(ProductRepository.java:47)\r\n\tat com.test.service_receiver.repository.ProductRepository.saveProduct(ProductRepository.java:27)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.test.service_receiver.repository.ProductRepository$$SpringCGLIB$$0.saveProduct(<generated>)\r\n\tat com.test.service_receiver.service.ProductService.addNewProduct(ProductService.java:26)\r\n\tat com.test.service_receiver.service.RabbitReceiver.receive(RabbitReceiver.java:32)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:270)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:217)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:148)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1694)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1616)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1604)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1595)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1540)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1518)\r\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1518)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\nCaused by: org.postgresql.util.PSQLException: Ошибка при попытке подсоединения.\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:446)\r\n\tat org.postgresql.Driver.connect(Driver.java:298)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\r\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\r\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\r\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)\r\n\t... 41 common frames omitted\r\nCaused by: java.net.UnknownHostException: postgres\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:751)\r\n\tat org.postgresql.core.PGStream.createSocket(PGStream.java:260)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:121)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)\r\n\t... 55 common frames omitted\r\n","appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:11:19.129+05:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:11:19.182+05:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:32.42+05:00","@version":"1","message":"Starting ServiceReceiverApplication using Java 21.0.1 with PID 9508 (E:\\Работа\\Тестовое задание\\testTask\\service-receiver\\target\\classes started by danil in E:\\Работа\\Тестовое задание\\testTask\\service-receiver)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:32.431+05:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:33.609+05:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:33.662+05:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#10947c4e:0/SimpleConnection@79e7188e [delegate=amqp://guest@127.0.0.1:5672/, localPort=56606]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:33.717+05:00","@version":"1","message":"Started ServiceReceiverApplication in 2.034 seconds (process running for 2.727)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.063+05:00","@version":"1","message":"Получено сообщение: id = 6, name = Product Name, Price = 99.99, Timestamp = 2025-02-22 15:13:42.97","logger_name":"com.test.service_receiver.service.RabbitReceiver","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.065+05:00","@version":"1","message":"Сохранение продукта: id = 6, name = Product Name, price = 99.99, timestamp = 2025-02-22 15:13:42.97","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.072+05:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.301+05:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@726b31bc","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.302+05:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.354+05:00","@version":"1","message":"Продукт с id = 6 уже существует в базе данных","logger_name":"com.test.service_receiver.repository.ProductRepository","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"ERROR","level_value":40000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:43.355+05:00","@version":"1","message":"Ошибка при сохранении продукта: id = 6, name = Product Name, price = 99.99, timestamp = 2025-02-22 15:13:42.97. Ошибка: Продукт с таким id уже существует","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"ERROR","level_value":40000,"stack_trace":"java.sql.SQLException: Продукт с таким id уже существует\r\n\tat com.test.service_receiver.repository.ProductRepository.saveProduct(ProductRepository.java:29)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.test.service_receiver.repository.ProductRepository$$SpringCGLIB$$0.saveProduct(<generated>)\r\n\tat com.test.service_receiver.service.ProductService.addNewProduct(ProductService.java:26)\r\n\tat com.test.service_receiver.service.RabbitReceiver.receive(RabbitReceiver.java:32)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:270)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:217)\r\n\tat org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:148)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1694)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1616)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1604)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1595)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1540)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1518)\r\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\r\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1518)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\r\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\n","appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:55.608+05:00","@version":"1","message":"Получено сообщение: id = 8, name = Product Name, Price = 99.99, Timestamp = 2025-02-22 15:13:55.602","logger_name":"com.test.service_receiver.service.RabbitReceiver","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:55.609+05:00","@version":"1","message":"Сохранение продукта: id = 8, name = Product Name, price = 99.99, timestamp = 2025-02-22 15:13:55.602","logger_name":"com.test.service_receiver.service.ProductService","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:13:55.625+05:00","@version":"1","message":"Продукт успешно сохранён: id = 8, name = Product Name, price = 99.99, timestamp = 2025-02-22 15:13:55.602","logger_name":"com.test.service_receiver.repository.ProductRepository","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:04.798+05:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:05.679+05:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:05.691+05:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:05.696+05:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:47.428+05:00","@version":"1","message":"Starting ServiceReceiverApplication using Java 21.0.1 with PID 3624 (E:\\Работа\\Тестовое задание\\testTask\\service-receiver\\target\\classes started by danil in E:\\Работа\\Тестовое задание\\testTask\\service-receiver)","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:47.438+05:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.test.service_receiver.ServiceReceiverApplication","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
{"@timestamp":"2025-02-22T15:14:48.592+05:00","@version":"1","message":"Attempting to connect to: [rabbitmq:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"appname":"service-receiver"}
