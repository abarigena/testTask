version: '3.8'
services:

  service-sender:
    build:
      context: ./service-sender
      dockerfile: Dockerfile
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASS}
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq

  service-receiver:
    build:
      context: ./service-receiver
      dockerfile: Dockerfile
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/rabbitreceiver
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASS}
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit enable_publisher_confirms true"

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: rabbitreceiver
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
      - ./init-db:/docker-entrypoint-initdb.d/
volumes:
  postgres: {}
